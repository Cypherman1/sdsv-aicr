{"version":3,"sources":["_nav.js","routes.js","views/Containers/DefaultLayout/DefaultLayout.js"],"names":["items","name","url","icon","routes","path","exact","component","React","lazy","DefaultAside","DefaultFooter","DefaultHeader","DefaultLayout","loading","className","e","preventDefault","this","props","history","push","common","asideAppShowed","fixed","fallback","onLogout","signOut","display","minimized","navConfig","navigation","router","Container","fluid","map","route","idx","key","render","from","to","Component","connect","actions"],"mappings":"0NAAe,GACbA,MAAO,CACL,CACEC,KAAM,kBACNC,IAAK,cACLC,KAAM,aAER,CACEF,KAAM,yBACNC,IAAK,UACLC,KAAM,iBCcGC,EAfA,CACb,CACEC,KAAM,cACNC,OAAO,EACPL,KAAM,kBACNM,UAbmBC,IAAMC,MAAK,kBAChC,iEAcA,CACEJ,KAAM,UACNC,OAAO,EACPL,KAAM,SACNM,UAfmBC,IAAMC,MAAK,kBAChC,8CCiBIC,EAAeF,IAAMC,MAAK,kBAAM,gEAChCE,EAAgBH,IAAMC,MAAK,kBAAM,mCACjCG,EAAgBJ,IAAMC,MAAK,kBAAM,yDAEjCI,E,2MACJC,QAAU,kBACR,yBAAKC,UAAU,oCAAf,e,uEAGMC,GACNA,EAAEC,iBACFC,KAAKC,MAAMC,QAAQC,KAAK,Y,+BAGhB,IAAD,OACP,OACE,yBACEN,UAAS,cACPG,KAAKC,MAAMG,OAAOC,eAAiB,kBAAoB,KAGzD,kBAAC,IAAD,CAAWC,OAAK,GACd,kBAAC,WAAD,CAAUC,SAAUP,KAAKJ,WACvB,kBAACF,EAAD,CAAec,SAAU,SAAAV,GAAC,OAAI,EAAKW,QAAQX,QAG/C,yBAAKD,UAAU,YACb,kBAAC,IAAD,CACES,OAAK,EACLI,QAAQ,KACRC,WAAW,EACXd,UAAU,gBAEV,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAee,UAAWC,EAAYC,OAAQA,KAEhD,kBAAC,IAAD,MACA,kBAAC,IAAD,OAEF,0BAAMjB,UAAU,QAEd,kBAACkB,EAAA,EAAD,CAAWC,OAAK,EAACnB,UAAU,QACzB,kBAAC,WAAD,CAAUU,SAAUP,KAAKJ,WACvB,kBAAC,IAAD,KACGV,EAAO+B,KAAI,SAACC,EAAOC,GAClB,OAAOD,EAAM7B,UACX,kBAAC,IAAD,CACE+B,IAAKD,EACLhC,KAAM+B,EAAM/B,KACZC,MAAO8B,EAAM9B,MACbL,KAAMmC,EAAMnC,KACZsC,OAAQ,SAAApB,GAAK,OAAI,kBAACiB,EAAM7B,UAAcY,MAEtC,QAEN,kBAAC,IAAD,CAAUqB,KAAK,IAAIC,GAAG,mBAK9B,kBAAC,IAAD,KACE,kBAAC,WAAD,CAAUhB,SAAUP,KAAKJ,WACvB,kBAACJ,EAAD,SAIN,kBAAC,IAAD,KACE,kBAAC,WAAD,CAAUe,SAAUP,KAAKJ,WACvB,kBAACH,EAAD,a,GAlEgB+B,aA8EbC,uBAJS,SAAC,GACvB,MAAO,CAAErB,OAD6B,EAAbA,UAIasB,EAAzBD,CAAkC9B","file":"static/js/17.19c338c5.chunk.js","sourcesContent":["export default {\r\n  items: [\r\n    {\r\n      name: \"Data Extraction\",\r\n      url: \"/extraction\",\r\n      icon: \"icon-home\",\r\n    },\r\n    {\r\n      name: \"Template Configuration\",\r\n      url: \"/editor\",\r\n      icon: \"icon-pencil\",\r\n    },\r\n  ],\r\n};\r\n","import React from \"react\";\r\nconst DataExtraction = React.lazy(() =>\r\n  import(\"./views/DataExtraction/DataExtraction\")\r\n);\r\n\r\nconst ImageMapEditor = React.lazy(() =>\r\n  import(\"./views/EditorLib/components/imagemap/ImageMapEditor\")\r\n);\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/extraction\",\r\n    exact: true,\r\n    name: \"Data Extraction\",\r\n    component: DataExtraction\r\n  },\r\n  {\r\n    path: \"/editor\",\r\n    exact: true,\r\n    name: \"editor\",\r\n    component: ImageMapEditor\r\n  }\r\n];\r\n\r\nexport default routes;\r\n","import React, { Component, Suspense } from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport * as router from \"react-router-dom\";\r\nimport { Container } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../actions\";\r\n\r\nimport {\r\n  AppAside,\r\n  AppFooter,\r\n  AppHeader,\r\n  AppSidebar,\r\n  AppSidebarFooter,\r\n  AppSidebarForm,\r\n  AppSidebarHeader,\r\n  AppSidebarMinimizer,\r\n  AppSidebarNav2 as AppSidebarNav\r\n} from \"@coreui/react\";\r\n// sidebar nav config\r\nimport navigation from \"../../../_nav\";\r\n// routes config\r\nimport routes from \"../../../routes\";\r\n\r\nconst DefaultAside = React.lazy(() => import(\"./DefaultAside\"));\r\nconst DefaultFooter = React.lazy(() => import(\"./DefaultFooter\"));\r\nconst DefaultHeader = React.lazy(() => import(\"./DefaultHeader\"));\r\n\r\nclass DefaultLayout extends Component {\r\n  loading = () => (\r\n    <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\r\n  );\r\n\r\n  signOut(e) {\r\n    e.preventDefault();\r\n    this.props.history.push(\"/login\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`app ${\r\n          this.props.common.asideAppShowed ? \"aside-menu-show\" : \"\"\r\n        }`}\r\n      >\r\n        <AppHeader fixed>\r\n          <Suspense fallback={this.loading()}>\r\n            <DefaultHeader onLogout={e => this.signOut(e)} />\r\n          </Suspense>\r\n        </AppHeader>\r\n        <div className=\"app-body\">\r\n          <AppSidebar\r\n            fixed\r\n            display=\"lg\"\r\n            minimized={true}\r\n            className=\"text-primary\"\r\n          >\r\n            <AppSidebarHeader />\r\n            <AppSidebarForm />\r\n            <Suspense>\r\n              <AppSidebarNav navConfig={navigation} router={router} />\r\n            </Suspense>\r\n            <AppSidebarFooter />\r\n            <AppSidebarMinimizer />\r\n          </AppSidebar>\r\n          <main className=\"main\">\r\n            {/*<AppBreadcrumb appRoutes={routes} router={router} />*/}\r\n            <Container fluid className=\"px-3\">\r\n              <Suspense fallback={this.loading()}>\r\n                <Switch>\r\n                  {routes.map((route, idx) => {\r\n                    return route.component ? (\r\n                      <Route\r\n                        key={idx}\r\n                        path={route.path}\r\n                        exact={route.exact}\r\n                        name={route.name}\r\n                        render={props => <route.component {...props} />}\r\n                      />\r\n                    ) : null;\r\n                  })}\r\n                  <Redirect from=\"/\" to=\"/dashboard\" />\r\n                </Switch>\r\n              </Suspense>\r\n            </Container>\r\n          </main>\r\n          <AppAside>\r\n            <Suspense fallback={this.loading()}>\r\n              <DefaultAside />\r\n            </Suspense>\r\n          </AppAside>\r\n        </div>\r\n        <AppFooter>\r\n          <Suspense fallback={this.loading()}>\r\n            <DefaultFooter />\r\n          </Suspense>\r\n        </AppFooter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ common }) => {\r\n  return { common };\r\n};\r\n\r\nexport default connect(mapStateToProps, actions)(DefaultLayout);\r\n"],"sourceRoot":""}